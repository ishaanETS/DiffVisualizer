Class {
	#name : #Commit,
	#superclass : #Object,
	#instVars : [
		'diffs',
		'mseMooseModel',
		'theclass'
	],
	#category : #DiffVisualizer
}

{ #category : #'instance creation' }
Commit >> classModified: diff [

	^ mseMooseModel allModelClasses detect: [ :c | 
		              c sourceAnchor fileName endsWith: diff filename  ]
]

{ #category : #accessing }
Commit >> diffs [

	^ diffs
]

{ #category : #accessing }
Commit >> diffs: anObject [

	diffs := anObject
]

{ #category : #'instance creation' }
Commit >> fromCSV: filename [

	diffs := filename asFileReference readStreamDo: [ :readStream | 
		         (NeoCSVReader on: readStream)
			         skipHeader;
			         recordClass: DataClass;
			         addField: #filename:;
			         addField: #plus_indexes:;
			         addField: #minus_indexes:;
			         upToEnd ].
		
	^self
]

{ #category : #'instance creation' }
Commit >> loadMSE: filepath rootfolder: rootfolderpath [

	| mseFileRef mseStream mooseModel |
	mseFileRef := filepath asFileReference. "Generated by FamixMaker"
	mseStream := mseFileRef readStream.
	mseStream
		ifNotNil: [ 
			mooseModel := MooseModel importFromMSEStream: mseStream.
			mooseModel rootFolder: rootfolderpath.
			mseStream close ]
		ifNil: [ 
			self error:
				'Could not load MSE file into Moose: ' , mseFileRef asString ].
	mseMooseModel := mooseModel.
	^ self
]

{ #category : #'instance creation' }
Commit >> methodsModified: index [

	^ theclass methods detect: [ :m| index between: m sourceAnchor startLine and:  m sourceAnchor endLine].
]

{ #category : #accessing }
Commit >> mseMooseModel [

	^ mseMooseModel
]

{ #category : #accessing }
Commit >> mseMooseModel: anObject [

	mseMooseModel := anObject
]

{ #category : #accessing }
Commit >> theclass [

	^ theclass
]

{ #category : #accessing }
Commit >> theclass: anObject [

	^ theclass := anObject
]
